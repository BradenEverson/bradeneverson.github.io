[
    {
        "name": "Embedded Machine Learning - Predictive Heart Attack Monitor üíì",
        "descr": [
            "Using the <a href=\"https://github.com/unda-ml/unda\">unda library</a>, trained a dense neural network off of the <a href=\"https://www.kaggle.com/datasets/rashikrahmanpritom/heart-attack-analysis-prediction-dataset\">heart attack analysis prediction dataset</a> from Kaggle",
            "Trained model on 4 features and totaled ~512 total parameters. Using Unda the model was trained to an accuracy of 96.08%",
            "Exported model trained off supercomputer as a custom .unda file that could be interpretted by an embedded Unda runtime",
            "Created an embedded esp32 based circuit that integrated peripherals including heart sensor for reading bpm and LEDs for signifying model state and prediction status",
            "Developed firmware in Rust that not only performed inferences from the ML model, but also responded accordingly and repeatedly blinked the LEDs within a 3D printed case to alert the user."
        ],
        "extra": [
            "<b>This project was a part of the showcase at the 2024 MSOE ROSIE Supercomputer challenge and ranked 4th place overall!!</b>",
            "<a href=\"https://github.com/BradenEverson/unda-heart-embedded\">Embedded Source Code</a>",
            "<a href=\"https://github.com/BradenEverson/unda-heart-attack-dnn\">Model Source Code</a>"
        ]
    },
    {
        "name": "Unda - Open-Source Machine Learning Library in Rust from Scratch ‚öôÔ∏èü¶Ä",
        "descr": [
            "Developing a machine learning library <i>Unda</i> for accelerated machine learning tasks",
            "Created intermediate backing API for constructing neural networks as sequences of computation nodes in a custom built compute graph",
            "Utilized XLA bindings written in Rust to dynamically compile compute graph into an accelerated context",
            "Created a high level API for creating supervised machine learning models.",
            "Working on future implementations of unsupervised and generative model architectures"
        ],
        "extra": [
            "<b>Unda was a part of the 2024 MSOE ROSIE Supercomputer challenge and ranked 4th place overall!!</b>",
            "<a href=\"https://github.com/unda-ml/unda\" target=\"_blank\">Star Unda on GitHub</a>"
        ]
    },
    {
        "name": "Machine Learning Drones - Embedded Deep Learning ü¶æ",
        "descr": [
            "Developing and implementing a fully autonomous drone that could respond to hand signals for motion.",
            "Modeled and developed the convolutional neural network computer vision and path decision systems responsible for the drone's flight pattern.",
            "Developed a lightweight embedded Rust library based off existing deep learning crate that can parse precompiled weight/bias models and forward propagate a convolutional neural network on the embedded level.",
            "Implemented a lightweight file format for hosting machine learning models on memory intensive embedded systems containing serialized model weights, biases, activation functions and layer types."
        ],
        "extra": []
    },
    {
        "name": "Large Language Model Fine Tuning in Rust üíÅ",
        "descr": [
            "Fine tuned a downloaded copy of the GPT-2 model using input sample data generated from romcoms and dating show scripts to create a model specifically aimed at generating reality TV.",
            "Developed wrapper interface in Rust that would generate 'contestants' for dating show, procedurally generated personality traits based on a noise map generated over a list of attributes.",
            "Utilized Fine Tuned GPT Model to generate the scripts with respect to contestant names and personalities, along with the type of event the script would be acting out.",
            "Created frontend through the Unity Platform, procedurally generated contestant models with a 2.5D effect while contestants acted out the AI generated scripts."
        ],
        "extra": []
    },
    {
        "name": "MSOE Honors Community Project - Generative AI for Demolished Buildings üèõÔ∏è",
        "descr": [
            "Developing a generative adversarial network that can generate predicted 3D renders of buildings from the Milwaukee Bronzeville area that have been demolished based on rough blueprints generated by historical fire maps.",
            "Created a parallelized web scraping Rust script that downloads 1200 3mb Milwaukee area fire map files from the UWM archive.",
            "Generated training data based off fire maps through segmentation algorithm that uses image processing to generate geometries of every building displayed in fire map using a convolutional neural network.",
            "Teaching model based on fire maps as training inputs and human generated 3D models of 10 buildings."
        ],
        "extra": []
    },
    {
        "name": "Senior Capstone - Smart IoT Gardening Systems ü™¥",
        "descr": [
            "Developing and implementing a smart gardening system that can autonomously water and maintain garden based on plant needs.",
            "Leveraging IoT sensors to monitor soil moisture, temperature, and light levels to adjust watering schedules and alert users of any issues.",
            "Integrating with a mobile app to provide users with real-time data and control over their gardening system.",
            "Utilizing machine learning algorithms to predict optimal watering times and amounts based on historical data and weather forecasts."
        ],
        "extra": []
    }
]